package linkedlist

/*
	给你两个 非空 链表来代表两个非负整数。数字最高位位于链表开始位置。它们的每个节点只存储一位数字。将这两数相加会返回一个新的链表。
	你可以假设除了数字 0 之外，这两个数字都不会以零开头。
	难度：中等

	进阶：
	如果输入链表不能修改该如何处理？换句话说，你不能对列表中的节点进行翻转。

	示例：

	输入：(7 -> 2 -> 4 -> 3) + (5 -> 6 -> 4)
	输出：7 -> 8 -> 0 -> 7

	来源：力扣（LeetCode）
	链接：https://leetcode-cn.com/problems/add-two-numbers-ii

	思路；
		经过分析，我们不难发现，根据加法原则，从低位开始相加，并且考虑进位标志。
		然而，链表开始位置是数字的最高位。因此，我们只需要先将链表进行翻转，然后根据加法原则即可完成此题。
*/
